<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3E908F67-5543-4879-A1DC-08EACE79B3CD}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Avalonia.Direct2D1</RootNamespace>
    <AssemblyName>Avalonia.Direct2D1</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <Import Project="$(SolutionDir)Targets\Avalonia.WarnAsError.Output.Targets" />
  <Import Project="$(SolutionDir)Targets\Avalonia.Control.References.Targets" />
  <Import Project="$(SolutionDir)Targets\Avalonia.Layout.References.Targets" />
  <Import Project="$(SolutionDir)Targets\Avalonia.Interactivity.References.Targets" />
  <Import Project="$(SolutionDir)Targets\Avalonia.Style.References.Targets" />
  <ItemGroup>
    <Reference Include="SharpDX, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\SharpDX.3.1.0\lib\net45\SharpDX.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="SharpDX.Direct2D1, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\SharpDX.Direct2D1.3.1.0\lib\net45\SharpDX.Direct2D1.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="SharpDX.DXGI, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b4dcf0f35e5521f1, processorArchitecture=MSIL">
      <HintPath>..\..\..\packages\SharpDX.DXGI.3.1.0\lib\net45\SharpDX.DXGI.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\Shared\SharedAssemblyInfo.cs">
      <Link>Properties\SharedAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="..\Avalonia.Win32\Interop\UnmanagedMethods.cs">
      <Link>UnmanagedMethods.cs</Link>
    </Compile>
    <Compile Include="Direct2D1Platform.cs" />
    <Compile Include="Disposable.cs" />
    <Compile Include="Media\BrushImpl.cs" />
    <Compile Include="Media\BrushWrapper.cs" />
    <Compile Include="Media\DrawingContext.cs" />
    <Compile Include="Media\Imaging\RenderTargetBitmapImpl.cs" />
    <Compile Include="Media\Imaging\BitmapImpl.cs" />
    <Compile Include="Media\RadialGradientBrushImpl.cs" />
    <Compile Include="Media\LinearGradientBrushImpl.cs" />
    <Compile Include="Media\AvaloniaTextRenderer.cs" />
    <Compile Include="Media\TileBrushImpl.cs" />
    <Compile Include="Media\SolidColorBrushImpl.cs" />
    <Compile Include="Media\StreamGeometryContextImpl.cs" />
    <Compile Include="Media\GeometryImpl.cs" />
    <Compile Include="Media\StreamGeometryImpl.cs" />
    <Compile Include="Media\FormattedTextImpl.cs" />
    <Compile Include="PrimitiveExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RenderTarget.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="..\..\Shared\RenderHelpers\RenderHelpers.projitems" Label="Shared" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>